package presentacion.clases;

import presentacion.controlador.CtrlPresentacion;
import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;

import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;

/**
 @author sergi.campuzano
 */

/**
 * Vista de los Autores que forman parte de algun documento
 */
public class VAutores {

    /**
     * Instancia del controlador de presentacion para enlazar operaciones
     */
    private CtrlPresentacion presentacion;

    /**
     * Frame de la vista actual
     */
    private JFrame frameVista = new JFrame("Vista Autores");

    /**
     * Panel donde esta el contenido de la vista
     */
    private JPanel panelContenidos;

    /**
     * Lista donde aparecen los autores
     */
    private JList<String> listaAutores;

    /**
     * Area de texto para filtrar autores por prefijo
     */
    private JTextField prefijoAutor;

    /**
     * Etiqueta con el contenido "prefijo autor"
     */
    private JLabel label;

    /**
     * Botón para que se listen todos los autores
     */
    private JButton listarTodosBoton;

    /**
     * Botón para que se filtren los los autores
     */
    private JButton filtrar;


    /**
     * Constructor de la vista VAutores
     */
    public VAutores(CtrlPresentacion presentacion) {
        this.presentacion = presentacion;
    }

    /**
     * Inicializa las características de la vista
     */
    public void inicializar() {
        frameVista.setContentPane(panelContenidos);
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        double width = screenSize.getWidth() / 1.5, height = screenSize.getHeight() / 1.5;
        frameVista.setBounds((int) (width / 3.7), (int) (height / 3.7), (int) width, (int) height);
        frameVista.setResizable(false);

        inicializarComponentes();
    }

    /**
     * Inicializa los componentes de la vista
     */
    private void inicializarComponentes() {
        //frameVista.addWindowListener(presentacion.getAccionVentana());
        frameVista.setDefaultCloseOperation(DISPOSE_ON_CLOSE);

        prefijoAutor.setActionCommand("prefijoAutor");
        prefijoAutor.addActionListener(presentacion.getAccionEventoVAutores());

        listarTodosBoton.setActionCommand("listarTodosAutores");
        listarTodosBoton.addActionListener(presentacion.getAccionEventoVAutores());

        filtrar.setActionCommand("prefijoAutor");
        filtrar.addActionListener(presentacion.getAccionEventoVAutores());
    }

    /**
     * Hace visible o no esta vista
     *
     * @param b booleano para saber si la vista se hace visible
     */
    public void hacerVisible(boolean b) {
        mostrarAutores("");
        this.frameVista.setVisible(b);
    }

    /**
     * Lista los autores con el prefijo seleccionado en JTextField
     */
    public void accionPrefijoAutor() {
        String pref = prefijoAutor.getText();
        mostrarAutores(pref);
    }

    /**
     * Lista todos los autores
     */
    public void accionListarTodos() {
        mostrarAutores("");
        prefijoAutor.setText("");
    }

    /**
     * Muestra todos los autores que empiezan por pref
     *
     * @param pref prefijo de los autores a mostrar
     */
    public void mostrarAutores(String pref) {
        ArrayList<String> autores = presentacion.listaAutores(pref);
        if (autores != null) {
            DefaultListModel<String> modelo = new DefaultListModel<>();
            modelo.removeAllElements();

            modelo.addAll(autores);
            listaAutores.setModel(modelo);
        } else listaAutores.setModel(new DefaultListModel<>());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelContenidos = new JPanel();
        panelContenidos.setLayout(new BorderLayout(0, 0));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        panelContenidos.add(panel1, BorderLayout.CENTER);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        panel1.add(panel2, BorderLayout.NORTH);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new BorderLayout(0, 0));
        panel2.add(panel3, BorderLayout.NORTH);
        prefijoAutor = new JTextField();
        prefijoAutor.setText("");
        panel3.add(prefijoAutor, BorderLayout.CENTER);
        label = new JLabel();
        label.setText("Prefijo autor:");
        panel3.add(label, BorderLayout.WEST);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new BorderLayout(0, 0));
        panel4.setPreferredSize(new Dimension(0, 10));
        panel3.add(panel4, BorderLayout.NORTH);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new BorderLayout(0, 0));
        panel3.add(panel5, BorderLayout.EAST);
        listarTodosBoton = new JButton();
        listarTodosBoton.setHorizontalAlignment(0);
        listarTodosBoton.setText("LISTAR TODOS LOS AUTORES");
        panel5.add(listarTodosBoton, BorderLayout.CENTER);
        filtrar = new JButton();
        filtrar.setText("Filtrar");
        panel5.add(filtrar, BorderLayout.WEST);
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new BorderLayout(0, 0));
        panel6.setPreferredSize(new Dimension(0, 10));
        panel2.add(panel6, BorderLayout.CENTER);
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, BorderLayout.CENTER);
        listaAutores = new JList();
        final DefaultListModel defaultListModel1 = new DefaultListModel();
        listaAutores.setModel(defaultListModel1);
        scrollPane1.setViewportView(listaAutores);
        final JPanel panel7 = new JPanel();
        panel7.setLayout(new BorderLayout(0, 0));
        panel7.setPreferredSize(new Dimension(10, 10));
        panelContenidos.add(panel7, BorderLayout.WEST);
        final JPanel panel8 = new JPanel();
        panel8.setLayout(new BorderLayout(0, 0));
        panel8.setPreferredSize(new Dimension(10, 0));
        panelContenidos.add(panel8, BorderLayout.EAST);
        final JPanel panel9 = new JPanel();
        panel9.setLayout(new BorderLayout(0, 0));
        panel9.setPreferredSize(new Dimension(0, 10));
        panelContenidos.add(panel9, BorderLayout.SOUTH);
    }

    /**
     * @hidden  ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelContenidos;
    }

}
